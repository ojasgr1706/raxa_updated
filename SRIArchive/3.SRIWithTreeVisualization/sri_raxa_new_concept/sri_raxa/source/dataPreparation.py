from splittingPOD import *


# Temporary Variable for Checking
obsIds = ['17087', '17117', '378877', '378880', '378881', '378882', '378884', '378887', '378888', '378891', '378953',
          '378954', '378957', '378959', '378962', '378963', '378964', '378967', '379200', '379201', '379202', '379203',
          '379204', '379206', '379208', '379212', '379415', '379416', '379417', '379418', '379420', '379421', '379422',
          '379428', '379431', '379631', '379632', '379633', '379639', '379641', '379643', '379644', '379645', '380006',
          '380009', '380010', '380012', '380013', '380014', '380018', '380019', '380021', '380023', '380270', '380271',
          '380272', '380273', '380279', '380281', '380282', '380571', '380572', '380574', '380575', '380580', '380582',
          '380583', '380820', '380821', '380822', '380826', '380827', '380828', '380832', '380833', '380835', '381078',
          '381080', '381081', '381083', '381084', '381087', '381088', '381089', '381091', '381289', '381293', '381294',
          '381295', '381296', '381297', '381303', '381304', '381472', '381473', '381475', '381479', '381480', '381481',
          '381484', '381485', '381669', '381673', '381674', '381675', '381676', '381679', '381680', '381682', '381957',
          '381959', '381961', '381963', '381964', '381965', '381968', '382112', '382114', '382116', '382117', '382119',
          '382121', '382123', '382507', '382509', '382512', '382514', '382516', '382519', '382521', '382522', '382523',
          '382778', '382780', '382782', '382783', '382784', '382786', '382787', '382794', '382795', '383013', '383014',
          '383015', '383019', '383021', '383023', '383024', '383026', '383430', '383431', '383433', '383435', '383439',
          '383440', '383441', '383443', '383757', '383758', '383760', '383761', '383762', '383763', '383765', '383768',
          '384037', '384039', '384041', '384042', '384046', '384047', '384050', '384051', '384313', '384315', '384317',
          '384318', '384320', '384321', '384324', '384326', '384704', '384706', '384708', '384709', '384712', '384713',
          '384714', '384717', '384935', '384937', '384942', '384943', '384944', '384946', '384948', '384949', '385306',
          '385307', '385308', '385311', '385312', '385314', '385315', '385319', '385694', '385695', '385696', '385697',
          '385698', '385699', '385700', '385701', '385848', '385853', '385854', '385856', '385857', '385860', '385861',
          '385862', '386319', '386320', '386321', '386322', '386323', '386326', '386329', '386330', '386335', '386614',
          '386623', '386625', '386626', '386627', '386628', '386630', '386631', '386853', '386854', '386855', '386856',
          '386859', '386861', '386865', '386866', '386867', '387111', '387114', '387115', '387117', '387119', '387121',
          '387122', '387125', '387128', '387334', '387336', '387340', '387341', '387342', '387343', '387345', '387346',
          '387350', '387352', '387353', '387355', '387607', '387612', '387613', '387614', '387615', '387618', '387619',
          '387620', '387621', '387622', '387626', '387627', '387890', '387893', '387895', '387896', '387899', '387901',
          '387902', '388052', '388055', '388058', '388059', '388061', '388062', '388064', '388335', '388339', '388340',
          '388342', '388343', '388346', '388348', '388655', '388656', '388665', '388666', '388667', '388668', '388669',
          '388888', '388889', '388893', '388897', '388898', '388900', '388901', '389132', '389134', '389135', '389136',
          '389139', '389141', '389143', '389407', '389408', '389409', '389413', '389414', '389419', '389420', '389643',
          '389645', '389647', '389648', '389651', '389654', '389656', '389657', '389923', '389928', '389930', '389931',
          '389932', '389933', '389934', '390169', '390170', '390173', '390174', '390177', '390178', '390180', '390181',
          '390183', '390187', '390188', '390189', '390191', '390194', '390196', '390197', '390198', '390200', '390203',
          '390204', '390206', '390209', '390213', '390215', '390216', '390217', '390219', '390222', '390223', '390225',
          '390226', '390227', '390229', '390230', '390235', '390509', '390510', '390511', '390517', '390520', '390521',
          '390522', '390523', '390788', '390790', '390791', '390793', '390794', '390795', '390800', '390803', '390805',
          '390806', '391121', '391122', '391123', '391124', '391125', '391127', '391128', '391129', '391132', '391134',
          '391139', '391141', '391146', '391148', '391151', '391152', '391153', '391154', '391156', '391158', '391159',
          '391161', '391422', '391423', '391425', '391426', '391427', '391428', '391429', '391430', '391432', '391434',
          '391435', '391438', '391727', '391729', '391730', '391734', '391736', '391737', '391738', '391742', '391743',
          '391745', '392033', '392034', '392035', '392037', '392040', '392042', '392045', '392046', '392047', '392049',
          '392051', '392377', '392378', '392380', '392381', '392385', '392386', '392390', '392393', '392394', '392395',
          '392397', '392764', '392766', '392768', '392769', '392770', '392771', '392773', '392774', '392775', '392777',
          '392781', '392988', '392994', '392995', '392999', '393000', '393001', '393002', '393003', '393004', '393005',
          '393006', '393234', '393235', '393236', '393239', '393241', '393242', '393244', '393246', '393248', '393249',
          '393251', '393606', '393607', '393610', '393611', '393612', '393614', '393615', '393618', '393620', '393621',
          '393830']

def fetch_mlob_for_obs_ids(obsIds):
    if not obsIds:
        return []
    else:
        cnx = mysql.connector.connect(user=userdb, password=pwddb, host=hostdb, database=databasedb)
        cursor = cnx.cursor()
        # sql_query = ("SELECT value_text from mlob where obs_id in (" + ','.join([str(f) for f in obsIds]) + ')' + 'value_text is not null and values_text != ""')
        sql_query = ('SELECT ctakes_response from mlob where ctakes_response is not null and ctakes_response != "" and obs_id in (' + ','.join([str(f) for f in obsIds]) + ')')
        # print(sql_query)
        cursor.execute(sql_query)
        res = cursor.fetchall()
        res_df = pd.DataFrame(res)

        final_res = create_list_from_result(res)
        return final_res


if __name__ == '__main__':
    # prepare_data_frame()
    fetch_mlob_for_obs_ids(['13997'])





